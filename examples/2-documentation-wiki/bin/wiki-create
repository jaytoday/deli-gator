#!/bin/bash
# wiki-create - Create new Confluence page
# Usage: wiki-create "Title" "Content HTML" PARENT_PAGE_ID [SPACE_KEY]


# Load credentials from environment or secure storage
load_credentials() {
    # Try environment variables first
    if [[ -n "$CONFLUENCE_API_TOKEN" ]]; then
        TOKEN="$CONFLUENCE_API_TOKEN"
        return 0
    fi

    # Try 1Password (if available)
    if command -v op &> /dev/null; then
        TOKEN=$(op read "op://Private/CONFLUENCE API/credential" 2>/dev/null) || true
        if [[ -n "$TOKEN" ]]; then return 0; fi
    fi

    # Try Keybase (if available)
    if command -v keybase &> /dev/null; then
        TOKEN=$(keybase fs read /keybase/private/$(keybase whoami)/confluence-token 2>/dev/null) || true
        if [[ -n "$TOKEN" ]]; then return 0; fi
    fi

    echo "Error: Credentials not found. Set CONFLUENCE_API_TOKEN environment variable." >&2
    exit 1
}

# Load credentials
load_credentials

set -e

BASE_URL="https://example.atlassian.net/wiki"

TITLE="$1"
CONTENT="$2"
PARENT_ID="$3"
SPACE_KEY="${4:-OPS}"  # Default to OPS space

if [[ -z "$TITLE" ]] || [[ -z "$CONTENT" ]] || [[ -z "$PARENT_ID" ]]; then
    echo "Usage: wiki-create \"Title\" \"Content HTML\" PARENT_PAGE_ID [SPACE_KEY]"
    echo ""
    echo "Create a new Confluence page as child of parent page"
    echo ""
    echo "IMPORTANT: Content must be Confluence Storage Format (HTML with macros)"
    echo ""
    echo "Examples:"
    echo "  wiki-create \"My Page\" \"<p>Content</p>\" 123456789"
    echo "  wiki-create \"My Page\" \"<p>Content</p>\" 123456789 OPS"
    echo ""
    echo "Common parent pages:"
    echo "  DevOPS Home: 123456789"
    exit 1
fi

AUTH_HEADER=$(echo -n "user@example.com:$TOKEN" | openssl base64 -A)

# Create payload
PAYLOAD=$(jq -n \
  --arg title "$TITLE" \
  --arg content "$CONTENT" \
  --arg parentId "$PARENT_ID" \
  --arg spaceKey "$SPACE_KEY" \
  '{
    type: "page",
    title: $title,
    ancestors: [{id: $parentId}],
    space: {key: $spaceKey},
    body: {
      storage: {
        value: $content,
        representation: "storage"
      }
    }
  }')

echo "Creating page '$TITLE' in space $SPACE_KEY..." >&2

# Create page
RESPONSE=$(curl --http1.1 -s -X POST \
  -H "Authorization: Basic $AUTH_HEADER" \
  -H "Content-Type: application/json" \
  -d "$PAYLOAD" \
  "$BASE_URL/rest/api/content")

# Check for errors
if echo "$RESPONSE" | jq -e '.message' >/dev/null 2>&1; then
    echo "Error: $(echo "$RESPONSE" | jq -r '.message')" >&2
    exit 1
fi

echo "Success!" >&2
echo "$RESPONSE" | jq '{
    id: .id,
    title: .title,
    space: .space.key,
    url: (.["_links"].base + .["_links"].webui)
}'
