#!/bin/bash
# monitoring-verify - Verify NRQL queries without creating drop rules
#
# Usage:
#   monitoring-verify "FROM Log WHERE message IS NULL"
#   monitoring-verify --count "FROM Transaction WHERE duration > 5"


# Load credentials from environment or secure storage
load_credentials() {
    # Try environment variables first
    if [[ -n "$NEWRELIC_API_TOKEN" ]]; then
        TOKEN="$NEWRELIC_API_TOKEN"
        return 0
    fi

    # Try 1Password (if available)
    if command -v op &> /dev/null; then
        TOKEN=$(op read "op://Private/NEWRELIC API/credential" 2>/dev/null) || true
        if [[ -n "$TOKEN" ]]; then return 0; fi
    fi

    # Try Keybase (if available)
    if command -v keybase &> /dev/null; then
        TOKEN=$(keybase fs read /keybase/private/$(keybase whoami)/newrelic-token 2>/dev/null) || true
        if [[ -n "$TOKEN" ]]; then return 0; fi
    fi

    echo "Error: Credentials not found. Set NEWRELIC_API_TOKEN environment variable." >&2
    exit 1
}

# Load credentials
load_credentials

set -euo pipefail

# Default account ID
ACCOUNT_ID="${NEWRELIC_ACCOUNT_ID:-1234567}"
SINCE="5 minutes ago"
QUERY=""
MODE="test"

# Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --account)
      ACCOUNT_ID="$2"
      shift 2
      ;;
    --since)
      SINCE="$2"
      shift 2
      ;;
    --count)
      MODE="count"
      shift
      ;;
    --help|-h)
      cat <<'EOF'
monitoring-verify - Verify NRQL queries before creating drop rules

USAGE:
  monitoring-verify [OPTIONS] <nrql_query>

OPTIONS:
  --account ID     Account ID (default: 1234567)
  --since TIME     Time window (default: "5 minutes ago")
  --count          Add COUNT(*) to query
  --help, -h       Show this help

EXAMPLES:
  # Verify a WHERE clause matches logs
  monitoring-verify "FROM Log WHERE message IS NULL"

  # Count matching logs
  monitoring-verify --count "FROM Log WHERE service.name = 'nginx'"

  # Check last hour
  monitoring-verify --since "1 hour ago" "FROM Transaction WHERE error IS true"

OUTPUT:
  Shows sample results or count of matching records

USE CASE:
  Test NRQL queries before creating drop rules to ensure they match
  the correct logs. Helps avoid accidentally dropping important data.

NOTES:
  - SINCE clause automatically added
  - Use --count to see volume before dropping
  - Test your drop rule logic first!
EOF
      exit 0
      ;;
    *)
      QUERY="$1"
      shift
      ;;
  esac
done

if [ -z "$QUERY" ]; then
  echo "Error: No NRQL query provided" >&2
  echo "Usage: monitoring-verify [OPTIONS] <nrql_query>" >&2
  echo "Try: monitoring-verify --help" >&2
  exit 1
fi

# Modify query based on mode
if [ "$MODE" = "count" ]; then
  # Extract FROM clause and add COUNT(*)
  if [[ "$QUERY" =~ ^FROM[[:space:]]+([^[:space:]]+) ]]; then
    DATA_TYPE="${BASH_REMATCH[1]}"
    QUERY="FROM $DATA_TYPE SELECT count(*) ${QUERY#FROM $DATA_TYPE}"
  fi
fi

# Construct NerdGraph query
GRAPHQL_QUERY=$(cat <<EOF
{
  actor {
    account(id: ${ACCOUNT_ID}) {
      nrql(query: "${QUERY} SINCE ${SINCE}") {
        results
      }
    }
  }
}
EOF
)

echo "Testing query: $QUERY SINCE $SINCE"
echo "---"

newrelic nerdgraph query "$GRAPHQL_QUERY" | jq '.data.actor.account.nrql.results'
