#!/bin/bash
# Create new Acme PROJ Jira issue
# Usage: issuetracker-create "summary" "description"


# Load credentials from environment or secure storage
load_credentials() {
    # Try environment variables first
    if [[ -n "$JIRA_API_TOKEN" ]]; then
        TOKEN="$JIRA_API_TOKEN"
        return 0
    fi

    # Try 1Password (if available)
    if command -v op &> /dev/null; then
        TOKEN=$(op read "op://Private/JIRA API/credential" 2>/dev/null) || true
        if [[ -n "$TOKEN" ]]; then return 0; fi
    fi

    # Try Keybase (if available)
    if command -v keybase &> /dev/null; then
        TOKEN=$(keybase fs read /keybase/private/$(keybase whoami)/jira-token 2>/dev/null) || true
        if [[ -n "$TOKEN" ]]; then return 0; fi
    fi

    echo "Error: Credentials not found. Set JIRA_API_TOKEN environment variable." >&2
    exit 1
}

# Load credentials
load_credentials

set -euo pipefail


if [ $# -lt 1 ]; then
  echo "Usage: issuetracker-create \"summary\" [\"description\"]"
  echo "Example: issuetracker-create \"Deploy new feature\" \"Deployed commit abc123 to production\""
  exit 1
fi

SUMMARY="$1"
DESCRIPTION="${2:-$SUMMARY}"

# Escape for JSON
ESCAPED_SUMMARY=$(echo "$SUMMARY" | jq -Rs .)
ESCAPED_DESC=$(echo "$DESCRIPTION" | jq -Rs .)

# Build issue JSON with ADF description
ISSUE_JSON=$(cat <<EOF
{
  "fields": {
    "project": {
      "key": "PROJ"
    },
    "summary": $ESCAPED_SUMMARY,
    "description": {
      "type": "doc",
      "version": 1,
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": $ESCAPED_DESC
            }
          ]
        }
      ]
    },
    "issuetype": {
      "name": "Task"
    }
  }
}
EOF
)

echo "Creating PROJ issue..."

RESPONSE=$(curl --http1.1 -s -X POST \
  -H "Authorization: Basic $(echo -n "user@example.com:$TOKEN" | openssl base64 -A)" \
  -H "Accept: application/json" \
  -H "Content-Type: application/json" \
  --data "$ISSUE_JSON" \
  "https://example.atlassian.net/rest/api/3/issue")

if echo "$RESPONSE" | jq -e '.errorMessages' >/dev/null 2>&1; then
  echo "Error: $(echo "$RESPONSE" | jq -r '.errorMessages | join(", ")')"
  exit 1
else
  ISSUE_KEY=$(echo "$RESPONSE" | jq -r '.key')
  ISSUE_ID=$(echo "$RESPONSE" | jq -r '.id')
  echo "âœ“ Created $ISSUE_KEY (ID: $ISSUE_ID)"
  echo "URL: https://example.atlassian.net/browse/$ISSUE_KEY"
fi
